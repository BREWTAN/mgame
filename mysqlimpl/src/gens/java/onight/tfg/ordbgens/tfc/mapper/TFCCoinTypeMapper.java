package onight.tfg.ordbgens.tfc.mapper;

import java.util.List;
import onight.tfg.ordbgens.tfc.entity.TFCCoinType;
import onight.tfg.ordbgens.tfc.entity.TFCCoinTypeExample;
import onight.tfg.ordbgens.tfc.entity.TFCCoinTypeKey;
import onight.tfw.ojpa.ordb.StaticTableDaoSupport;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TFCCoinTypeMapper extends StaticTableDaoSupport<TFCCoinType, TFCCoinTypeExample, TFCCoinTypeKey> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFC_COIN_TYPE
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    @SelectProvider(type=TFCCoinTypeSqlProvider.class, method="countByExample")
    int countByExample(TFCCoinTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFC_COIN_TYPE
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    @DeleteProvider(type=TFCCoinTypeSqlProvider.class, method="deleteByExample")
    int deleteByExample(TFCCoinTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFC_COIN_TYPE
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    @Delete({
        "delete from TFC_COIN_TYPE",
        "where COIN_TYPE_ID = #{coinTypeId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(TFCCoinTypeKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFC_COIN_TYPE
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    @Insert({
        "insert into TFC_COIN_TYPE (COIN_TYPE_ID, COIN_NAME, ",
        "COIN_SCRIPT, HAVE_CHILD, ",
        "CAN_SPLIT, USE_LEVEL)",
        "values (#{coinTypeId,jdbcType=VARCHAR}, #{coinName,jdbcType=VARCHAR}, ",
        "#{coinScript,jdbcType=VARCHAR}, #{haveChild,jdbcType=INTEGER}, ",
        "#{canSplit,jdbcType=INTEGER}, #{useLevel,jdbcType=INTEGER})"
    })
    int insert(TFCCoinType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFC_COIN_TYPE
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    @InsertProvider(type=TFCCoinTypeSqlProvider.class, method="insertSelective")
    int insertSelective(TFCCoinType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFC_COIN_TYPE
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    @SelectProvider(type=TFCCoinTypeSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="COIN_TYPE_ID", property="coinTypeId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="COIN_NAME", property="coinName", jdbcType=JdbcType.VARCHAR),
        @Result(column="COIN_SCRIPT", property="coinScript", jdbcType=JdbcType.VARCHAR),
        @Result(column="HAVE_CHILD", property="haveChild", jdbcType=JdbcType.INTEGER),
        @Result(column="CAN_SPLIT", property="canSplit", jdbcType=JdbcType.INTEGER),
        @Result(column="USE_LEVEL", property="useLevel", jdbcType=JdbcType.INTEGER)
    })
    List<TFCCoinType> selectByExample(TFCCoinTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFC_COIN_TYPE
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    @Select({
        "select",
        "COIN_TYPE_ID, COIN_NAME, COIN_SCRIPT, HAVE_CHILD, CAN_SPLIT, USE_LEVEL",
        "from TFC_COIN_TYPE",
        "where COIN_TYPE_ID = #{coinTypeId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="COIN_TYPE_ID", property="coinTypeId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="COIN_NAME", property="coinName", jdbcType=JdbcType.VARCHAR),
        @Result(column="COIN_SCRIPT", property="coinScript", jdbcType=JdbcType.VARCHAR),
        @Result(column="HAVE_CHILD", property="haveChild", jdbcType=JdbcType.INTEGER),
        @Result(column="CAN_SPLIT", property="canSplit", jdbcType=JdbcType.INTEGER),
        @Result(column="USE_LEVEL", property="useLevel", jdbcType=JdbcType.INTEGER)
    })
    TFCCoinType selectByPrimaryKey(TFCCoinTypeKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFC_COIN_TYPE
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    @UpdateProvider(type=TFCCoinTypeSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TFCCoinType record, @Param("example") TFCCoinTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFC_COIN_TYPE
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    @UpdateProvider(type=TFCCoinTypeSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TFCCoinType record, @Param("example") TFCCoinTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFC_COIN_TYPE
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    @UpdateProvider(type=TFCCoinTypeSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TFCCoinType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFC_COIN_TYPE
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    @Update({
        "update TFC_COIN_TYPE",
        "set COIN_NAME = #{coinName,jdbcType=VARCHAR},",
          "COIN_SCRIPT = #{coinScript,jdbcType=VARCHAR},",
          "HAVE_CHILD = #{haveChild,jdbcType=INTEGER},",
          "CAN_SPLIT = #{canSplit,jdbcType=INTEGER},",
          "USE_LEVEL = #{useLevel,jdbcType=INTEGER}",
        "where COIN_TYPE_ID = #{coinTypeId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(TFCCoinType record);
}