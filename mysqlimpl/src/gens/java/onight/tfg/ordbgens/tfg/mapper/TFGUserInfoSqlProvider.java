package onight.tfg.ordbgens.tfg.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import java.util.List;
import java.util.Map;
import onight.tfg.ordbgens.tfg.entity.TFGUserInfo;
import onight.tfg.ordbgens.tfg.entity.TFGUserInfoExample.Criteria;
import onight.tfg.ordbgens.tfg.entity.TFGUserInfoExample.Criterion;
import onight.tfg.ordbgens.tfg.entity.TFGUserInfoExample;

public class TFGUserInfoSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFG_USER_INFO
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    public String countByExample(TFGUserInfoExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("TFG_USER_INFO");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFG_USER_INFO
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    public String deleteByExample(TFGUserInfoExample example) {
        BEGIN();
        DELETE_FROM("TFG_USER_INFO");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFG_USER_INFO
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    public String insertSelective(TFGUserInfo record) {
        BEGIN();
        INSERT_INTO("TFG_USER_INFO");
        
        if (record.getUserId() != null) {
            VALUES("USER_ID", "#{userId,jdbcType=BIGINT}");
        }
        
        if (record.getNickname() != null) {
            VALUES("NICKNAME", "#{nickname,jdbcType=VARCHAR}");
        }
        
        if (record.getSecurityEmail() != null) {
            VALUES("SECURITY_EMAIL", "#{securityEmail,jdbcType=VARCHAR}");
        }
        
        if (record.getUserName() != null) {
            VALUES("USER_NAME", "#{userName,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            VALUES("ADDRESS", "#{address,jdbcType=VARCHAR}");
        }
        
        if (record.getStatus() != null) {
            VALUES("STATUS", "#{status,jdbcType=INTEGER}");
        }
        
        if (record.getIdNo() != null) {
            VALUES("ID_NO", "#{idNo,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            VALUES("UPDATE_TIME", "#{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            VALUES("CREATE_TIME", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getQqId() != null) {
            VALUES("QQ_ID", "#{qqId,jdbcType=VARCHAR}");
        }
        
        if (record.getWechatId() != null) {
            VALUES("WECHAT_ID", "#{wechatId,jdbcType=VARCHAR}");
        }
        
        if (record.getMobile() != null) {
            VALUES("MOBILE", "#{mobile,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            VALUES("EMAIL", "#{email,jdbcType=VARCHAR}");
        }
        
        if (record.getRenren() != null) {
            VALUES("RENREN", "#{renren,jdbcType=VARCHAR}");
        }
        
        if (record.getWeibo() != null) {
            VALUES("WEIBO", "#{weibo,jdbcType=VARCHAR}");
        }
        
        if (record.getFace() != null) {
            VALUES("FACE", "#{face,jdbcType=INTEGER}");
        }
        
        if (record.getFaceUrl() != null) {
            VALUES("FACE_URL", "#{faceUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getGender() != null) {
            VALUES("GENDER", "#{gender,jdbcType=INTEGER}");
        }
        
        if (record.getBirthday() != null) {
            VALUES("BIRTHDAY", "#{birthday,jdbcType=DATE}");
        }
        
        if (record.getCountry() != null) {
            VALUES("COUNTRY", "#{country,jdbcType=VARCHAR}");
        }
        
        if (record.getCity() != null) {
            VALUES("CITY", "#{city,jdbcType=VARCHAR}");
        }
        
        if (record.getRegTime() != null) {
            VALUES("REG_TIME", "#{regTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRegIp() != null) {
            VALUES("REG_IP", "#{regIp,jdbcType=VARCHAR}");
        }
        
        if (record.getLastLoginTime() != null) {
            VALUES("LAST_LOGIN_TIME", "#{lastLoginTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLastLoginIp() != null) {
            VALUES("LAST_LOGIN_IP", "#{lastLoginIp,jdbcType=VARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFG_USER_INFO
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    public String selectByExample(TFGUserInfoExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("USER_ID");
        } else {
            SELECT("USER_ID");
        }
        SELECT("NICKNAME");
        SELECT("SECURITY_EMAIL");
        SELECT("USER_NAME");
        SELECT("ADDRESS");
        SELECT("STATUS");
        SELECT("ID_NO");
        SELECT("UPDATE_TIME");
        SELECT("CREATE_TIME");
        SELECT("QQ_ID");
        SELECT("WECHAT_ID");
        SELECT("MOBILE");
        SELECT("EMAIL");
        SELECT("RENREN");
        SELECT("WEIBO");
        SELECT("FACE");
        SELECT("FACE_URL");
        SELECT("GENDER");
        SELECT("BIRTHDAY");
        SELECT("COUNTRY");
        SELECT("CITY");
        SELECT("REG_TIME");
        SELECT("REG_IP");
        SELECT("LAST_LOGIN_TIME");
        SELECT("LAST_LOGIN_IP");
        FROM("TFG_USER_INFO");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        if(example!=null&&example.getSelectCols()!=null&&example.getSelectCols().trim().length()>0){
		BEGIN();
		if (example != null && example.isDistinct()) {
			SELECT_DISTINCT(example.getSelectCols());
		} else {
				SELECT(example.getSelectCols());
		}
				applyWhere(example, false);
		}
        if(example != null){
            return SQL().concat(" limit "+example.getOffset()+","+example.getLimit());
        }
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFG_USER_INFO
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        TFGUserInfo record = (TFGUserInfo) parameter.get("record");
        TFGUserInfoExample example = (TFGUserInfoExample) parameter.get("example");
        
        BEGIN();
        UPDATE("TFG_USER_INFO");
        
        if (record.getUserId() != null) {
            SET("USER_ID = #{record.userId,jdbcType=BIGINT}");
        }
        
        if (record.getNickname() != null) {
            SET("NICKNAME = #{record.nickname,jdbcType=VARCHAR}");
        }
        
        if (record.getSecurityEmail() != null) {
            SET("SECURITY_EMAIL = #{record.securityEmail,jdbcType=VARCHAR}");
        }
        
        if (record.getUserName() != null) {
            SET("USER_NAME = #{record.userName,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            SET("ADDRESS = #{record.address,jdbcType=VARCHAR}");
        }
        
        if (record.getStatus() != null) {
            SET("STATUS = #{record.status,jdbcType=INTEGER}");
        }
        
        if (record.getIdNo() != null) {
            SET("ID_NO = #{record.idNo,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            SET("UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            SET("CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getQqId() != null) {
            SET("QQ_ID = #{record.qqId,jdbcType=VARCHAR}");
        }
        
        if (record.getWechatId() != null) {
            SET("WECHAT_ID = #{record.wechatId,jdbcType=VARCHAR}");
        }
        
        if (record.getMobile() != null) {
            SET("MOBILE = #{record.mobile,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            SET("EMAIL = #{record.email,jdbcType=VARCHAR}");
        }
        
        if (record.getRenren() != null) {
            SET("RENREN = #{record.renren,jdbcType=VARCHAR}");
        }
        
        if (record.getWeibo() != null) {
            SET("WEIBO = #{record.weibo,jdbcType=VARCHAR}");
        }
        
        if (record.getFace() != null) {
            SET("FACE = #{record.face,jdbcType=INTEGER}");
        }
        
        if (record.getFaceUrl() != null) {
            SET("FACE_URL = #{record.faceUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getGender() != null) {
            SET("GENDER = #{record.gender,jdbcType=INTEGER}");
        }
        
        if (record.getBirthday() != null) {
            SET("BIRTHDAY = #{record.birthday,jdbcType=DATE}");
        }
        
        if (record.getCountry() != null) {
            SET("COUNTRY = #{record.country,jdbcType=VARCHAR}");
        }
        
        if (record.getCity() != null) {
            SET("CITY = #{record.city,jdbcType=VARCHAR}");
        }
        
        if (record.getRegTime() != null) {
            SET("REG_TIME = #{record.regTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRegIp() != null) {
            SET("REG_IP = #{record.regIp,jdbcType=VARCHAR}");
        }
        
        if (record.getLastLoginTime() != null) {
            SET("LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLastLoginIp() != null) {
            SET("LAST_LOGIN_IP = #{record.lastLoginIp,jdbcType=VARCHAR}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFG_USER_INFO
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("TFG_USER_INFO");
        
        SET("USER_ID = #{record.userId,jdbcType=BIGINT}");
        SET("NICKNAME = #{record.nickname,jdbcType=VARCHAR}");
        SET("SECURITY_EMAIL = #{record.securityEmail,jdbcType=VARCHAR}");
        SET("USER_NAME = #{record.userName,jdbcType=VARCHAR}");
        SET("ADDRESS = #{record.address,jdbcType=VARCHAR}");
        SET("STATUS = #{record.status,jdbcType=INTEGER}");
        SET("ID_NO = #{record.idNo,jdbcType=VARCHAR}");
        SET("UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}");
        SET("CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP}");
        SET("QQ_ID = #{record.qqId,jdbcType=VARCHAR}");
        SET("WECHAT_ID = #{record.wechatId,jdbcType=VARCHAR}");
        SET("MOBILE = #{record.mobile,jdbcType=VARCHAR}");
        SET("EMAIL = #{record.email,jdbcType=VARCHAR}");
        SET("RENREN = #{record.renren,jdbcType=VARCHAR}");
        SET("WEIBO = #{record.weibo,jdbcType=VARCHAR}");
        SET("FACE = #{record.face,jdbcType=INTEGER}");
        SET("FACE_URL = #{record.faceUrl,jdbcType=VARCHAR}");
        SET("GENDER = #{record.gender,jdbcType=INTEGER}");
        SET("BIRTHDAY = #{record.birthday,jdbcType=DATE}");
        SET("COUNTRY = #{record.country,jdbcType=VARCHAR}");
        SET("CITY = #{record.city,jdbcType=VARCHAR}");
        SET("REG_TIME = #{record.regTime,jdbcType=TIMESTAMP}");
        SET("REG_IP = #{record.regIp,jdbcType=VARCHAR}");
        SET("LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=TIMESTAMP}");
        SET("LAST_LOGIN_IP = #{record.lastLoginIp,jdbcType=VARCHAR}");
        
        TFGUserInfoExample example = (TFGUserInfoExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFG_USER_INFO
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    public String updateByPrimaryKeySelective(TFGUserInfo record) {
        BEGIN();
        UPDATE("TFG_USER_INFO");
        
        if (record.getNickname() != null) {
            SET("NICKNAME = #{nickname,jdbcType=VARCHAR}");
        }
        
        if (record.getSecurityEmail() != null) {
            SET("SECURITY_EMAIL = #{securityEmail,jdbcType=VARCHAR}");
        }
        
        if (record.getUserName() != null) {
            SET("USER_NAME = #{userName,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            SET("ADDRESS = #{address,jdbcType=VARCHAR}");
        }
        
        if (record.getStatus() != null) {
            SET("STATUS = #{status,jdbcType=INTEGER}");
        }
        
        if (record.getIdNo() != null) {
            SET("ID_NO = #{idNo,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            SET("UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            SET("CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getQqId() != null) {
            SET("QQ_ID = #{qqId,jdbcType=VARCHAR}");
        }
        
        if (record.getWechatId() != null) {
            SET("WECHAT_ID = #{wechatId,jdbcType=VARCHAR}");
        }
        
        if (record.getMobile() != null) {
            SET("MOBILE = #{mobile,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            SET("EMAIL = #{email,jdbcType=VARCHAR}");
        }
        
        if (record.getRenren() != null) {
            SET("RENREN = #{renren,jdbcType=VARCHAR}");
        }
        
        if (record.getWeibo() != null) {
            SET("WEIBO = #{weibo,jdbcType=VARCHAR}");
        }
        
        if (record.getFace() != null) {
            SET("FACE = #{face,jdbcType=INTEGER}");
        }
        
        if (record.getFaceUrl() != null) {
            SET("FACE_URL = #{faceUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getGender() != null) {
            SET("GENDER = #{gender,jdbcType=INTEGER}");
        }
        
        if (record.getBirthday() != null) {
            SET("BIRTHDAY = #{birthday,jdbcType=DATE}");
        }
        
        if (record.getCountry() != null) {
            SET("COUNTRY = #{country,jdbcType=VARCHAR}");
        }
        
        if (record.getCity() != null) {
            SET("CITY = #{city,jdbcType=VARCHAR}");
        }
        
        if (record.getRegTime() != null) {
            SET("REG_TIME = #{regTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRegIp() != null) {
            SET("REG_IP = #{regIp,jdbcType=VARCHAR}");
        }
        
        if (record.getLastLoginTime() != null) {
            SET("LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLastLoginIp() != null) {
            SET("LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR}");
        }
        
        WHERE("USER_ID = #{userId,jdbcType=BIGINT}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TFG_USER_INFO
     *
     * @mbggenerated Wed Dec 16 19:48:42 CST 2015
     */
    protected void applyWhere(TFGUserInfoExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}